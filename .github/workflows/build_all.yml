name: Build All Projects
#
# Every build job:
# - Is responsible for building one project, and committing the output 
#   to the repository.
# - Needs a relevant `Check-xyz` job to check if pushed files are concerned 
#   files or NOT, if NOT then every step in the job will be bypassed.
# - Needs the previous (orderd as written in the file here) build job to 
#   guarantee a sequential run, mainly when committing updates to respository.
#   Reason: since every job commits to the repository, if these jobs run concurrently
#   then commit fails, even if there is no "technical" dependnecy between them.
#   One drawback that if a build job fails, next jobs won't run. 
#   Another one is the longer time taken.
# - Should pull output of the previous job(s), to avoid error: 
#   `tip of your current branch is behind its remote counterpart`
# - Doesn't run when triggered by a tag, since all code is built and output is saved
#   in the repository already with the last `main` update workflow.

on:
#  workflow_dispatch:
  push:
    paths: # Collected from paths of all jobs below
    - 'include/**'
    - 'lib/**'
    - 'ug_example/**'
    - '.github/workflows/**'
    
env:
  BUILD_TYPE: Release
  COMMIT_MSG: 'Internal build due to code change' 
  CRONO_BIN_PATH: ./bin/
  BUILD_PATH: '../build/bfR'

jobs:
  # ===========================================================================
  #
  # If triggered by a new tag then no need to run any job. As outputs saved 
  # on main are supposed to be latest once built from the latest update.
  #
  Check-Trigger:
    runs-on: ubuntu-latest
    outputs:
      is_tag: ${{ steps.check.outputs.is_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if triggered by a tag
        id: check
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "is_tag=true" >> $GITHUB_OUTPUT
          else
            echo "is_tag=false" >> $GITHUB_OUTPUT
          fi
          
  # ===========================================================================
  #
  Check-Build-UG_EX:
    runs-on: ubuntu-latest
    needs: Check-Trigger
    if: ${{ needs.Check-Trigger.outputs.is_tag == 'false' }}
    
    # Map a step output to a job output
    outputs:
      ok_to_proceed: ${{ steps.check.outputs.ok_to_proceed_val }}
      
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Get changed files in concerned folder(s)
      id: changed-files-specific
      uses: tj-actions/changed-files@v46.0.3
      with:
        files: |
          lib/**
          include/**
          ug_example/**
          .github/workflows/build_all.yml
          
    # Check if any file(s) in the concerned folder changed
    - name: Check
      id: check
      if: steps.changed-files-specific.outputs.any_changed == 'false'
      run: |
        echo "No concerned files changed, suppressing processing."       
        echo "ok_to_proceed_val=N" >> $GITHUB_OUTPUT
        
  # ___________________________________________________________________________
  # 
  UG_EX-Linux-Build:
    runs-on: ubuntu-latest
    if: ${{ needs.Check-Trigger.outputs.is_tag == 'false' }}
    needs: 
    - Check-Trigger
    - Check-Build-UG_EX

    env: 
      TOOLS_SUB_DIR: 'ug_example/tools'
      CRONO_EXE_NAME: ndigo_ugex

    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4

    - name: Pull latest changes
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      run: |
        git pull --rebase

    - name: Configure CMake and Build
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      run: |
        cd ${{env.TOOLS_SUB_DIR}}
        cmake -B ${{env.BUILD_PATH}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        cmake --build ${{env.BUILD_PATH}}
        
    - name: Commit Executable
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.CRONO_BIN_PATH}}${{env.CRONO_EXE_NAME}} --force
        
  # ___________________________________________________________________________
  # 
  UG_EX-Win-Build:
    runs-on:  windows-latest
    if: ${{ needs.Check-Trigger.outputs.is_tag == 'false' }}
    needs: 
    - Check-Trigger
    - Check-Build-UG_EX
    - UG_EX-Linux-Build  # Guarnatee Sequential Build    

    env: 
      TOOLS_SUB_DIR: 'ug_example/tools'
      CRONO_EXE_NAME: ndigo_ugex.exe

    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4

    - name: Pull latest changes
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      run: |
        git pull --rebase

    - name: Configure CMake and Build
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      run: |
        cd ${{env.TOOLS_SUB_DIR}}
        cmake -B ${{env.BUILD_PATH}}
        cmake --build ${{env.BUILD_PATH}} --config ${{env.BUILD_TYPE}}
        
    - name: Commit Executable
      if: ${{needs.Check-Build-UG_EX.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.CRONO_BIN_PATH}}${{env.CRONO_EXE_NAME}} --force

  # ===========================================================================
  #
  Check-Build-UG_EX_250M:
    runs-on: ubuntu-latest
    needs: Check-Trigger
    if: ${{ needs.Check-Trigger.outputs.is_tag == 'false' }}
    
    # Map a step output to a job output
    outputs:
      ok_to_proceed: ${{ steps.check.outputs.ok_to_proceed_val }}
      
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Get changed files in concerned folder(s)
      id: changed-files-specific
      uses: tj-actions/changed-files@v46.0.3
      with:
        files: |
          lib/**
          include/**
          ug_example_250M/**
          .github/workflows/build_all.yml
          
    # Check if any file(s) in the concerned folder changed
    - name: Check
      id: check
      if: steps.changed-files-specific.outputs.any_changed == 'false'
      run: |
        echo "No concerned files changed, suppressing processing."       
        echo "ok_to_proceed_val=N" >> $GITHUB_OUTPUT
        
  # ___________________________________________________________________________
  # 
  UG_EX_250M-Linux-Build:
    runs-on: ubuntu-latest
    if: ${{ needs.Check-Trigger.outputs.is_tag == 'false' }}
    needs: 
    - Check-Trigger
    - Check-Build-UG_EX_250M
    - UG_EX-Win-Build  # Guarnatee Sequential Build     

    env: 
      TOOLS_SUB_DIR: 'ug_example_250M/tools'
      CRONO_EXE_NAME: ndigo_250M_ugex

    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Build-UG_EX_250M.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Build-UG_EX_250M.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4

    - name: Pull latest changes
      if: ${{needs.Check-Build-UG_EX_250M.outputs.ok_to_proceed != 'N' }}
      run: |
        git pull --rebase

    - name: Configure CMake and Build
      if: ${{needs.Check-Build-UG_EX_250M.outputs.ok_to_proceed != 'N' }}
      run: |
        cd ${{env.TOOLS_SUB_DIR}}
        cmake -B ${{env.BUILD_PATH}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        cmake --build ${{env.BUILD_PATH}}
        
    - name: Commit Executable
      if: ${{needs.Check-Build-UG_EX_250M.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.CRONO_BIN_PATH}}${{env.CRONO_EXE_NAME}} --force
        
  # ___________________________________________________________________________
  # 
  UG_EX_250M-Win-Build:
    runs-on:  windows-latest
    if: ${{ needs.Check-Trigger.outputs.is_tag == 'false' }}
    needs: 
    - Check-Trigger
    - Check-Build-UG_EX_250M
    - UG_EX_250M-Linux-Build  # Guarnatee Sequential Build

    env: 
      TOOLS_SUB_DIR: 'ug_example_250M/tools'
      CRONO_EXE_NAME: ndigo_250M_ugex.exe

    steps:
    - name: echo Suppress Status if Needed
      if: ${{needs.Check-Build-UG_EX_250M.outputs.ok_to_proceed == 'N' }}
      run: |
        echo "Job execution processing is suppressed for no cencerned files are changed."
        
    - name: Checkout Code
      if: ${{needs.Check-Build-UG_EX_250M.outputs.ok_to_proceed != 'N' }}
      uses: actions/checkout@v4

    - name: Pull latest changes
      if: ${{needs.Check-Build-UG_EX_250M.outputs.ok_to_proceed != 'N' }}
      run: |
        git pull --rebase

    - name: Configure CMake and Build
      if: ${{needs.Check-Build-UG_EX_250M.outputs.ok_to_proceed != 'N' }}
      run: |
        cd ${{env.TOOLS_SUB_DIR}}
        cmake -B ${{env.BUILD_PATH}}
        cmake --build ${{env.BUILD_PATH}} --config ${{env.BUILD_TYPE}}
        
    - name: Commit Executable
      if: ${{needs.Check-Build-UG_EX_250M.outputs.ok_to_proceed != 'N' }}
      uses: EndBug/add-and-commit@v9
      with:
          author_name: Internal Workflow Action
          message: ${{env.COMMIT_MSG}}
          add: ${{env.CRONO_BIN_PATH}}${{env.CRONO_EXE_NAME}} --force
